-- CRIANDO FUNÇÕES DE NUMEROS ALEATORIOS

SELECT RAND(); -- RETORNA VALOR ALEATORIO ENTRE 0 E 1

-- VALOR MIN = 100
-- VALOR MAX = 500

SELECT ROUND (((500 - 100 - 1) * RAND() + 100),0);

-- FUNÇÃO COM ERRO
CREATE FUNCTION NumeroAleatorio(@VAL_MIN INT, @VAL_MAX INT)
RETURNS INT
AS
BEGIN

	DECLARE @ALEATORIO INT
	DECLARE @VALOR_ALEATORIO FLOAT
	SET @VALOR_ALEATORIO = RAND()
	SET @ALEATORIO = ROUND(((@VAL_MAX - @VAL_MIN - 1) * @VALOR_ALEATORIO + @VAL_MIN),0);
	RETURN @ALEATORIO

END;

-- COMO FAZER PARA CRIAR FUNÇÃO COM NUMERO ALEATORIO
-- COM VISÃO

CREATE VIEW VW_ALEATORIO AS SELECT RAND() AS VALOR_ALEATORIO

SELECT * FROM VW_ALEATORIO

-- FUNÇÃO FUNCIONANDO CORRETAMENTE
CREATE FUNCTION NumeroAleatorio(@VAL_MIN INT, @VAL_MAX INT)
RETURNS INT
AS
BEGIN

	DECLARE @ALEATORIO INT
	DECLARE @VALOR_ALEATORIO FLOAT
	SELECT @VALOR_ALEATORIO = VALOR_ALEATORIO FROM VW_ALEATORIO
	SET @ALEATORIO = ROUND(((@VAL_MAX - @VAL_MIN - 1) * @VALOR_ALEATORIO + @VAL_MIN),0);
	RETURN @ALEATORIO

END;

SELECT dbo.NumeroAleatorio(1,50)

-- EXERCÍCIO

CREATE FUNCTION FaturamentoBairro (@BAIRRO VARCHAR(50))
RETURNS FLOAT
AS
BEGIN
   DECLARE @FATURAMENTO FLOAT
   SELECT @FATURAMENTO = SUM(INF.QUANTIDADE * INF.[PREÇO]) 
   FROM [ITENS NOTAS FISCAIS] INF
   INNER JOIN [NOTAS FISCAIS] NF
   ON INF.NUMERO = NF.NUMERO
   INNER JOIN [TABELA DE CLIENTES] TC
   ON TC.CPF = NF.CPF
   WHERE TC.BAIRRO = @BAIRRO
   RETURN @FATURAMENTO
END;

SELECT dbo.FaturamentoBairro('Jardins') 

CREATE FUNCTION CalculaDesconto (@CODIGO_PRODUTO VARCHAR(10), @DescontoPercentual INT)
RETURNS FLOAT
AS
BEGIN
   DECLARE @Desconto FLOAT
   DECLARE @PrecoComDesconto FLOAT
   DECLARE @Preco FLOAT
   SELECT @Preco = [PREÇO DE LISTA] FROM [TABELA DE PRODUTOS] WHERE [CODIGO DO PRODUTO] = @CODIGO_PRODUTO
   SET @Desconto = (@Preco * @DescontoPercentual) / 100
   SET @PrecoComDesconto = @Preco - @Desconto
   RETURN @PrecoComDesconto
END

