-- DESAFIOS FINAIS 1

--Na tabela de clientes, eu tenho um dado que é o volume de compra. 
--O que significa esse volume de compra? É que quando nós fizemos o cadastro do cliente
--na nossa empresa, nós meio que fizemos um contrato com cliente, 
--dizendo "quanto que você vai comprar por mês?", "eu vou comprar tantos litros, 
--mil litros por mês".

--Só que o nosso sistema tem uma falha, ele não consegue brecar as vendas dos clientes, 
--então esses clientes começam a comprar, comprar, comprar e muitas vezes, 
--eles compram mais do que está especificado no volume de compra no cadastro do cliente.
--Isso pode dar, internamente, problemas.

--Eu quero fazer um relatório para poder ver, dentro de um determinado mês, 
--quais foram os clientes que ultrapassaram ou não esse volume de compra. 
--Então esse é o meu problema, alguém chegou para mim e disse: 
--"olha, me vê dentro de um mês quais foram os clientes que compraram mais do que o volume de compra
--especificado para eles".

-- SELECIONANDO OS CAMPOS NECESSARIOS
SELECT
NF.CPF, NF.DATA_VENDA, INF.QUANTIDADE
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO

-- CONVERTENDO A DATA E UTILIZANDO A MASCARA
SELECT
NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120) AS MES_ANO, INF.QUANTIDADE
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO

-- SOMANDO AS QUANTIDADES E AGRUPANDO POR CPF E MES/ANO
SELECT
NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120) AS MES_ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120)

-- VISUALIZANDO A TABELA DE CLIENTES
SELECT CPF, NOME, VOLUME_DE_COMPRA FROM TABELA_DE_CLIENTES;

-- UTILIZANDO SUBQUERY NO INNER JOIN
SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL
FROM TABELA_DE_CLIENTES TC
INNER JOIN 
(
SELECT
NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120) AS MES_ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120)
) AS TV
ON TC.CPF = TV.CPF

-- CLASSIFICANDO OS VOLUMES
SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TV.QUANTIDADE_TOTAL THEN 'VENDAS VALIDAS'
ELSE 'VENDAS INVALIDAS'
END) AS RESULTADO
FROM TABELA_DE_CLIENTES TC
INNER JOIN 
(
SELECT
NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120) AS MES_ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120)
) AS TV
ON TC.CPF = TV.CPF

-- FILTRANDO A CONSULTA
SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TV.QUANTIDADE_TOTAL THEN 'VENDAS VALIDAS'
ELSE 'VENDAS INVALIDAS'
END) AS RESULTADO
FROM TABELA_DE_CLIENTES TC
INNER JOIN 
(
SELECT
NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120) AS MES_ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120)
) AS TV
ON TC.CPF = TV.CPF
WHERE TV.MES_ANO = '2015-01';

-- DESAFIO
-- listando somente os que tiveram vendas inválidas e calculando a diferença 
-- entre o limite de venda máximo e o realizado, em percentuais.

SELECT
TC.CPF,
TC.NOME,
TC.VOLUME_DE_COMPRA,
TV.MES_ANO,
TV.QUANTIDADE_TOTAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TV.QUANTIDADE_TOTAL THEN 'VENDAS VALIDAS'
ELSE 'VENDAS INVALIDAS'
END) AS RESULTADO,
ROUND((1 - (VOLUME_DE_COMPRA/QUANTIDADE_TOTAL)) * 100, 2) AS PORCENTAGEM_ACIMA
FROM TABELA_DE_CLIENTES TC
INNER JOIN 
(
SELECT
NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120) AS MES_ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, CONVERT(VARCHAR(7) ,NF.DATA_VENDA, 120)
) AS TV
ON TC.CPF = TV.CPF
WHERE TC.VOLUME_DE_COMPRA < TV.QUANTIDADE_TOTAL;